version: '3'

volumes:
  minio:
  mysql:

services:

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    volumes:
      - .:/var/www/project/:ro,cached
    ports:
      - "80:80"
    env_file:
      - config/development.env

  php:
    build:
      context: .
      dockerfile: php.Dockerfile
    volumes:
      - .:/var/www/project/:rw,cached
    expose:
      - "9000"
    env_file:
      - config/development.env

  mysql:
    image: mariadb
    volumes:
      - mysql:/var/lib/mysql
    env_file:
      - config/development.env

  # 128Mb Memcached Container
  memcached:
    image: memcached:alpine
    command: memcached -m 128m
    env_file:
      - config/development.env
  
  # AWS S3 clone for local development
  minio:
    image: minio/minio
    volumes:
      - minio:/export
    command: server /export
    ports:
      - "127.0.0.1:9000:9000"
    env_file:
      - config/development.env
  
  # Headless Chrome with Selenium as a test runner
  # This needs SYS_ADMIN caps for OSX
  selenium:
    image: yukinying/chrome-headless-browser-selenium
    ports:
      - "127.0.0.1:4444:4444"
    cap_add:
      - SYS_ADMIN
    shm_size: 1024m
    dns: 
      - 10.254.254.254

  mail:
    image: mailhog/mailhog
    expose:
      - 1025

  dnsmasq:
    image: andyshinn/dnsmasq
    ports:
      - 10.254.254.254:53:53/tcp
      - 10.254.254.254:53:53/udp
    cap_add:
      - NET_ADMIN
    command: "--address=/test/10.254.254.254"
    restart: always

# Add papertrail for logging

# Use newrelic for php container

# Varnish

# HTTPS CERTIFICATE

##
# TODO:
##
# - Allow updating projects by $ git pull upstream master
# - In order to do this we should have ./env file for environmental variables
# - We should have a base docker-compose.yml and docker-compose.project.yml
# - docker-compose.project.yml can be used to add custom services which are only used by this project
# - Enable new relic for php image